// <auto-generated />
using System;
using Backend.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Backend.Migrations
{
    [DbContext(typeof(ClassroomContext))]
    [Migration("20191201172537_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Backend.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("Backend.Model.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("Backend.Model.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ChapterId");

                    b.Property<string>("Content");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("ChapterId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("Backend.Model.Chapter", b =>
                {
                    b.HasOne("Backend.Model.Book", "Book")
                        .WithMany("Themes")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Backend.Model.Question", b =>
                {
                    b.HasOne("Backend.Model.Chapter", "Chapter")
                        .WithMany()
                        .HasForeignKey("ChapterId");
                });
#pragma warning restore 612, 618
        }
    }
}
